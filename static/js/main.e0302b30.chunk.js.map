{"version":3,"sources":["logo.svg","../../../../src/common/Container.tsx","../../../../src/common/Base.tsx","../../../../src/github/Issues.tsx","../../../../src/github/Size.tsx","../../../../src/github/Downloads.tsx","../../../../src/github/Activity.tsx","../../../../src/github/Version.tsx","../../../../src/github/License.tsx","../../../../src/github/Analysis.tsx","../../../../src/github/Social.tsx","../../../../src/github/Github.tsx","../../../../src/github/index.tsx","../../../../src/coverages/Coverages.tsx","../../../../src/coverages/Codacy.tsx","../../../../src/coverages/Coverage.tsx","../../../../src/coverages/index.tsx","../../../../src/npm/Version.tsx","../../../../src/npm/Size.tsx","../../../../src/npm/Npm.tsx","../../../../src/npm/index.tsx","App.tsx","index.tsx"],"names":["Container","this","props","React","child","Component","Base","Object","href","src","getUrl","defaultProps","platform","base","Issue","type","property","user","repo","label","test","join","Size","path","Activity","total","tag","baseData","interval","variant","version","branch","Version","typePath","License","Analysis","query","Social","Github","Issues","Downloads","Coverages","Codacy","projectId","Coverage","scope","packageName","dependency","dependencyScope","registryUri","url","format","Npm","App","className","logo","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0302b30.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.105c84b7.svg\";","import React, { Component, ReactElement } from 'react';\nimport { BaseProps } from '../common/Base';\n\nexport interface ContainerProps extends BaseProps {}\n\nexport default class Container extends Component<ContainerProps> {\n  render() {\n    return (\n      <>\n        {React.Children.toArray(this.props.children).map((child: React.ReactNode) => {\n          if (!React.isValidElement(child)) return;\n          return React.cloneElement(child as ReactElement, { ...this.props, ...(child as React.ReactElement).props });\n        })}\n      </>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport interface BaseProps {\n  platform?: 'github' | 'coveralls' | 'npm';\n  type?: string;\n  user?: string;\n  repo?: string;\n  base?: string;\n  href?: HTMLAnchorElement['href'];\n}\n\nexport interface BaseState extends BaseProps {}\n\nexport default class Base<T> extends Component<BaseProps & T, BaseState & T> {\n  static defaultProps: BaseProps = {\n    platform: 'github',\n    base: 'https://img.shields.io',\n  }\n  constructor(props: BaseProps & T, defaultState: BaseProps & T, forceState?: BaseProps & T) {\n    super(props);\n    this.state = Object.assign({}, { ...defaultState,  ...props }, forceState);\n  }\n  getUrl = () => '';\n  render() {\n    const { href } = this.state;\n    if (href) {\n      return <a href={href}> <img src={this.getUrl()} /> </a>;\n    }\n    return <img src={this.getUrl()} />;\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface IssueProps extends BaseProps {\n  /**\n   * Github Issue\n   * \n   * `/github/:issueKind/detail/:property/:user/:repo/:number`  \n   * GitHub issue/pull request detail: GitHub issue/pull request detail badge  \n   * \n   * `/github/issues/:user/:repo`  \n   * GitHub issues:  GitHub issues badge \n   * \n   * `/github/issues-raw/:user/:repo`  \n   * GitHub issues:  GitHub issues badge \n   * \n   * `/github/issues/:user/:repo/:label`  \n   * GitHub issues by-label: GitHub issues by-label badge  \n   * \n   * `/github/issues-raw/:user/:repo/:label`  \n   * GitHub issues by-label: GitHub issues by-label badge  \n   * \n   * `/github/issues-closed/:user/:repo`  \n   * GitHub closed issues: GitHub closed issues badge  \n   * \n   * `/github/issues-closed-raw/:user/:repo`  \n   * GitHub closed issues: GitHub closed issues badge  \n   * \n   * `/github/issues-pr/:user/:repo`  \n   * GitHub pull requests: GitHub pull requests badge  \n   * \n   * `/github/issues-pr-raw/:user/:repo`  \n   * GitHub pull requests: GitHub pull requests badge  \n   * \n   * `/github/issues-pr-closed/:user/:repo`  \n   * GitHub closed pull requests:  GitHub closed pull requests badge \n   * \n   * `/github/issues-pr-closed-raw/:user/:repo`  \n   * GitHub closed pull requests:  GitHub closed pull requests badge \n   * \n   * `/github/issues-pr/:user/:repo/:label`  \n   * GitHub pull requests by-label:  GitHub pull requests by-label badge \n   * \n   * `/github/issues-pr-raw/:user/:repo/:label`  \n   * GitHub pull requests by-label:  GitHub pull requests by-label badge \n   * \n   * `/github/labels/:user/:repo/:name`  \n   * GitHub labels:  GitHub labels badge \n   */\n  type?: 'issueKind' | 'issues' | 'issues-raw' | 'issues-closed'\n    | 'issues-closed-raw' | 'issues-pr' | 'issues-pr-raw' \n    | 'issues-pr-closed' | 'issues-pr-closed-raw'\n    | 'languages';\n  /**\n   * /github/:issueKind/detail/:property/:user/:repo/:number\n   */\n  property?: string;\n  /**\n   * /github/:issueKind/detail/:property/:user/:repo/:number\n   */\n  number?: string;\n  label?: string;\n}\n\nexport default class Issue extends Base<IssueProps> {\n  constructor(props: IssueProps) {\n    super(props, { platform: 'github', type: 'issues' });\n  };\n  getUrl = () => {\n    const { type, platform, property, user, repo, label, base } = this.state;\n    if (platform !== 'github') return '';\n    if (type === 'issues' || /^issues\\-(raw|closed|closed\\-raw|pr|pr\\-raw|pr\\-closed|pr\\-closed\\-raw)/.test(type!)) {\n      if(label && (type === 'issues' || /^issues\\-(raw|pr|pr\\-raw)/.test(type || ''))) {\n        return [base, platform, type, user, repo, label].join('/');\n      }\n      return [base, platform, type, user, repo].join('/');\n    }\n    if(type === 'issueKind') {\n      return [base, platform, type, 'detail', property, user, repo].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps } from '../common/Base';\n\nexport interface SizeProps extends BaseProps {\n  /**\n   * Github Size\n   * \n   * /github/languages/code-size/:user/:repo  \n   * /github/repo-size/:user/:repo  \n   * /github/size/:user/:repo/:path*  \n   */\n  type?: 'languages' | 'repo-size' | 'size';\n  /**\n   * GitHub file size in bytes\n   * build/phaser-craft.min.js\n   */\n  path?: string;\n}\n\nexport default class Size extends Base<SizeProps> {\n  constructor(props: SizeProps) {\n    super(props, { platform: 'github', type: 'languages' });\n  };\n\n  getUrl = () => {\n    const { type, platform, user, repo, base, path } = this.state;\n    if (platform !== 'github') return '';\n    /**\n     * /github/languages/code-size/:user/:repo\n     */\n    if (type === 'languages') {\n      return [base, platform, type, 'code-size', user, repo].join('/');\n    }\n    /**\n     * /github/repo-size/:user/:repo\n     */\n    if (type === 'repo-size') {\n      return [base, platform, type, user, repo].join('/');\n    }\n    /**\n     * /github/size/:user/:repo/:path*\n     */\n    if (type === 'size' && path) {\n      return [base, platform, type, user, repo, path].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface ActivityProps extends BaseProps {\n  /**\n   * Github Downloads\n   * \n   * `/github/downloads/:user/:repo/total`\n   * GitHub All Releases:  GitHub All Releases badge \n   * \n   * `/github/downloads/:user/:repo/:tag/total`\n   * GitHub Releases:  GitHub Releases badge \n   * \n   * `/github/downloads-pre/:user/:repo/:tag/total`\n   * GitHub Pre-Releases:  GitHub Pre-Releases badge \n   * \n   * `/github/downloads/:user/:repo/:tag/total`\n   * GitHub Releases (by Release): GitHub Releases (by Release) badge  \n   * \n   * `/github/downloads/:user/:repo/:tag/:path`\n   * GitHub Releases (by Asset): GitHub Releases (by Asset) badge  \n   * \n   * `/github/downloads-pre/:user/:repo/:tag/:path`\n   * GitHub Pre-Releases (by Asset): GitHub Pre-Releases (by Asset) badge  \n   */\n  type?: 'downloads' | 'downloads-pre';\n  tag?: string;\n  path?: string;\n  total?: boolean;\n}\n\nexport default class Activity extends Base<ActivityProps> {\n  constructor(props: ActivityProps) {\n    super(props, { platform: 'github', type: 'downloads', total: true });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base, tag, path, total } = this.state;\n    if (platform !== 'github' || !/^(downloads|downloads-pre)/.test(type || '')) return '';\n\n    const baseData = [base, platform, type, user, repo];\n\n    if (path && tag) {\n      return [...baseData, tag, path].join('/');\n    }\n    if ((total && tag) || (type === 'downloads-pre' && tag && total)) {\n      return [...baseData, tag, 'total'].join('/');\n    }\n    if (total) {\n      return [...baseData, 'total'].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface ActivityProps extends BaseProps {\n  /**\n   * `/github/commit-activity/:interval/:user/:repo`\n   * GitHub commit activity: GitHub commit activity badge  \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since tagged version:  GitHub commits since tagged version badge \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since tagged version (branch): GitHub commits since tagged version (branch) badge  \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since latest release:  GitHub commits since latest release badge \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since latest release (branch): GitHub commits since latest release (branch) badge  \n   * \n   * `/github/:variant/:user/:repo`\n   * GitHub contributors:  GitHub contributors badge \n   * \n   * `/github/last-commit/:user/:repo`\n   * GitHub last commit: GitHub last commit badge  \n   * \n   * `/github/last-commit/:user/:repo/:branch`\n   * GitHub last commit (branch):  GitHub last commit (branch) badge \n   * \n   * `/github/release-date/:user/:repo`\n   * GitHub Release Date:  GitHub Release Date badge \n   * \n   * `/github/release-date-pre/:user/:repo`\n   * GitHub (Pre-)Release Date:  GitHub (Pre-)Release Date badge \n   */\n  type?: 'commit-activity' | 'commits-since' | 'variant' | 'last-commit' | 'release-date' | 'release-date-pre';\n  variant?: string;\n  interval?: 'y' | 'm' | 'w';\n  version?: 'contributors' | 'contributors-anon';\n  branch?: string;\n}\n\nexport default class Activity extends Base<ActivityProps> {\n  constructor(props: ActivityProps) {\n    super(props, { platform: 'github', type: 'commits-since' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base, interval, variant, version, branch } = this.state;\n    if (platform !== 'github') return '';\n    if (type === 'commits-since' && version && branch) {\n      return [base, platform, type, user, repo, version, branch].join('/');\n    }\n    if (type === 'commit-activity' && interval) {\n      return [base, platform, type, interval, user, repo].join('/');\n    }\n    if (type === 'variant' && variant) {\n      return [base, platform, type, variant, user, repo].join('/');\n    }\n    if (type === 'last-commit') {\n      return branch ? [base, platform, type, user, repo, branch].join('/') : [base, platform, type, user, repo].join('/');\n    }\n    if (type && /^release\\-(date|date\\-pre)/.test(type)) {\n      return [base, platform, type, user, repo].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps } from '../common/Base';\n\nexport interface VersionProps extends BaseProps {\n  /**\n   * Github Version\n   * \n   * `/github/go-mod/go-version/:user/:repo`\n   * GitHub go.mod Go version: GitHub go.mod Go version badge  \n   * \n   * `/github/go-mod/go-version/:user/:repo/:branch`\n   * GitHub go.mod Go version (branch):  GitHub go.mod Go version (branch) badge \n   * \n   * `/github/go-mod/go-version/:user/:repo?filename=src%2Fgo.mod`\n   * GitHub go.mod Go version (subfolder of monorepo): GitHub go.mod Go version (subfolder of monorepo) badge  \n   * \n   * `/github/go-mod/go-version/:user/:repo/:branch?filename=src%2Fgo.mod`\n   * GitHub go.mod Go version (branch & subfolder of monorepo):  GitHub go.mod Go version (branch & subfolder of monorepo) badge \n   * \n   * `/github/manifest-json/v/:user/:repo`\n   * GitHub manifest version:  GitHub manifest version badge \n   * \n   * `/github/manifest-json/v/:user/:repo/:branch`\n   * GitHub manifest version:  GitHub manifest version badge \n   * \n   * `/github/package-json/v/:user/:repo`\n   * GitHub package.json version:  GitHub package.json version badge \n   * \n   * `/github/package-json/v/:user/:repo/:branch`\n   * GitHub package.json version (branch): GitHub package.json version (branch) badge  \n   * \n   * `/github/v/release/:user/:repo`\n   * GitHub release (latest by date):  GitHub release (latest by date) badge \n   * \n   * `/github/v/release/:user/:repo?include_prereleases`\n   * GitHub release (latest by date including pre-releases): GitHub release (latest by date including pre-releases) badge  \n   * \n   * `/github/v/release/:user/:repo?sort=semver`\n   * GitHub release (latest SemVer): GitHub release (latest SemVer) badge  \n   * \n   * `/github/v/release/:user/:repo?include_prereleases&sort=semver`\n   * GitHub release (latest SemVer including pre-releases):  GitHub release (latest SemVer including pre-releases) badge \n   * \n   * `/github/v/tag/:user/:repo`\n   * GitHub tag (latest by date):  GitHub tag (latest by date) badge \n   * \n   * `/github/v/tag/:user/:repo?sort=semver`\n   * GitHub tag (latest SemVer): GitHub tag (latest SemVer) badge  \n   * \n   * `/github/v/tag/:user/:repo?include_prereleases&sort=semver`\n   * GitHub tag (latest SemVer pre-release): GitHub tag (latest SemVer pre-release) badge  \n   */\n  type?: 'version-release' | 'version-tag' | 'package-json' | 'manifest-json' | 'go-mod';\n  branch?: string;\n}\n\nexport default class Version extends Base<VersionProps> {\n  constructor(props: VersionProps) {\n    super(props, { platform: 'github', type: 'version-release' });\n  };\n\n  getUrl = () => {\n    const { type, platform, user, repo, base, branch } = this.state;\n    let typePath = '';\n    switch (type) {\n      case 'version-release': typePath = 'v/release';break;\n      case 'version-tag': typePath = 'v/tag';break;\n      case 'package-json': typePath = 'package-json/v';break;\n      case 'manifest-json': typePath = 'manifest-json/v';break;\n      case 'go-mod': typePath = 'go-mod/go-version';break;\n      default:break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    const baseData = [base, platform, typePath, user, repo];\n    if (/(go\\-mod|manifest\\-json|package\\-json)/.test(type || '') && branch) {\n      return [...baseData, branch].join('/');\n    }\n    return baseData.join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface LicenseProps extends BaseProps {\n  /**\n   * Github License\n   * \n   * `/github/license/:user/:repo`  \n   * GitHub: GitHub badge  \n   */\n  type?: 'license';\n}\n\nexport default class License extends Base<LicenseProps> {\n  constructor(props: LicenseProps) {\n    super(props, { platform: 'github', type: 'license' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'github') return '';\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface AnalysisProps extends BaseProps {\n  /**\n   * Github Analysis\n   * \n   * `/github/languages/count/:user/:repo`  \n   * GitHub language count:  GitHub language count badge \n   * \n   * `/github/search/:user/:repo/:query`  \n   * GitHub search hit counter:  GitHub search hit counter badge \n   * \n   * `/github/languages/top/:user/:repo`  \n   * GitHub top language:  GitHub top language badge \n   */\n  type?: 'languages-count' | 'languages-top' | 'search';\n  query?: string;\n}\n\nexport default class Analysis extends Base<AnalysisProps> {\n  constructor(props: AnalysisProps) {\n    super(props, { platform: 'github', type: 'languages-count' });\n  };\n  getUrl = () => {\n    const {  base, platform, type, user, repo, query } = this.state;\n    let typePath = '';\n    switch (type) {\n      case 'languages-count': typePath = 'languages/count';break;\n      case 'languages-top': typePath = 'languages/top';break;\n      case 'search': typePath = 'search';break;\n      default:break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    const baseData = [base, platform, typePath, user, repo];\n    if (query) {\n      return [...baseData, query].join('/');\n    }\n    return baseData.join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface SocialProps extends BaseProps {\n  /**\n   * Github License\n   * \n   * `/github/followers/:user?label=Follow`\n   * GitHub followers: GitHub followers badge  \n   * \n   * `/github/forks/:user/:repo?label=Fork`\n   * GitHub forks: GitHub forks badge  \n   * \n   * `/github/stars/:user/:repo?style=social`\n   * GitHub stars: GitHub stars badge  \n   * \n   * `/github/watchers/:user/:repo?label=Watch`\n   * GitHub watchers:  GitHub watchers badge \n   */\n  type?: 'followers' | 'forks' | 'stars' | 'watchers';\n}\n\nexport default class Social extends Base<SocialProps> {\n  constructor(props: SocialProps) {\n    super(props, { platform: 'github', type: 'followers' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'github') return '';\n    if(type === 'followers') return [base, platform, type, user].join('/');\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import React from 'react';\nimport Container from '../common/Container';\nimport Issues from './Issues';\nimport Size from './Size';\nimport Downloads from './Downloads';\nimport Activity from './Activity';\nimport Version from './Version';\nimport License from './License';\nimport Analysis from './Analysis';\nimport Social from './Social';\n\nexport default class Github extends Container {\n  static Issues = Issues;\n  static Size = Size;\n  static Activity = Activity;\n  static Downloads = Downloads;\n  static Version = Version;\n  static License = License;\n  static Analysis = Analysis;\n  static Social = Social;\n}","import Github from './Github';\n\nexport default Github;","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface CoveragesProps extends BaseProps {\n  /**\n   * Code Coverage\n   * \n   * `/coveralls/:vcsType/:user/:repo`\n   * Coveralls github: Coveralls github badge  \n   * \n   * `/coveralls/:vcsType/:user/:repo/:branch`\n   * Coveralls github branch:  Coveralls github branch badge \n   * \n   * `/coveralls/:vcsType/:user/:repo`\n   * Coveralls bitbucket:  Coveralls bitbucket badge \n   * \n   * `/coveralls/:vcsType/:user/:repo/:branch`\n   * Coveralls bitbucket branch: Coveralls bitbucket branch badge  \n   */\n  type?: string;\n  branch?: string;\n}\n\nexport default class Coverages extends Base<CoveragesProps> {\n  constructor(props: CoveragesProps) {\n    super(props, { type: 'github' }, { platform: 'coveralls' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'coveralls') return '';\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface CodacyProps extends BaseProps {\n  /**\n   * Codacy Coverage\n   * \n   * `/codacy/coverage/:projectId`\n   * Codacy coverage:  Codacy coverage badge \n   * \n   * `/codacy/coverage/:projectId/:branch`\n   * Codacy branch coverage: Codacy branch coverage badge  \n   */\n  projectId?: string;\n  branch?: string;\n}\n\nexport default class Codacy extends Base<CodacyProps> {\n  constructor(props: CodacyProps) {\n    super(props, { }, { platform: 'coveralls' });\n  };\n  getUrl = () => {\n    const { base, platform, projectId, branch } = this.state;\n    if (platform !== 'coveralls') return '';\n    if (branch) return [base, platform, projectId, branch].join('/');\n    return [base, 'codacy/coverage', projectId].join('/');\n  }\n}","import React  from 'react';\nimport Container from '../common/Container';\nimport Coverages from './Coverages';\nimport Codacy from './Codacy';\n\n\nexport default class Coverage extends Container {\n  static Coverages = Coverages;\n  static Codacy = Codacy;\n}","import Coverage from './Coverage';\n\nexport default Coverage;","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\n/**\n * NPM Version\n * \n * `/npm/v/:packageName`  \n * npm:  npm badge \n * \n * `/npm/v/:scope/:packageName`  \n * npm (scoped): npm (scoped) badge  \n * \n * `/npm/v/:packageName/:tag`  \n * npm (tag):  npm (tag) badge \n * \n * `/npm/v/:packageName/:tag?registry_uri=https%3A%2F%2Fregistry.npmjs.com`  \n * npm (custom registry):  npm (custom registry) badge \n * \n * `/npm/v/:scope/:packageName/:tag`  \n * npm (scoped with tag):  npm (scoped with tag) badge \n * \n * `/npm/dependency-version/:packageName/peer/:dependency`\n * npm peer dependency version:  npm peer dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm peer dependency version (scoped): npm peer dependency version (scoped) badge  \n * \n * `/npm/dependency-version/:packageName/dev/:dependency`\n * npm dev dependency version: npm dev dependency version badge  \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm dev dependency version (scoped):  npm dev dependency version (scoped) badge \n * \n * `/npm/dependency-version/:packageName/:dependency`\n * npm (prod) dependency version:  npm (prod) dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/:dependencyScope?/:dependency`\n * npm (prod) dependency version (scoped): npm (prod) dependency version (scoped) badge  \n * \n * `/npm/types/:packageName`\n * npm type definitions: npm type definitions badge  \n */\nexport interface VersionProps extends BaseProps {\n  type?: 'version' | 'peer-dependency' | 'dev-dependency';\n  registryUri?: string;\n  packageName?: string;\n  dependency?: string;\n  scope?: string;\n  dependencyScope?: string;\n  version?: string;\n}\n\nexport default class Version extends Base<VersionProps> {\n  constructor(props: VersionProps) {\n    super(props, { type: 'version' }, { platform: 'npm' });\n  };\n  getUrl = () => {\n    const { base, platform, type, scope, packageName, dependency, dependencyScope, version, registryUri  } = this.state;\n    if (platform !== 'npm' || !packageName) return '';\n\n    let url = '';\n    const baseData = [base, platform];\n\n    if (type === 'version' && packageName) {\n      baseData.push('v');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.push(packageName);\n      if (version) {\n        baseData.push(version);\n      }\n      url = baseData.join('/');\n      if (registryUri) {\n        url = `${url}?registry_uri=${registryUri}`;\n      }\n    } else if (type === 'peer-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      url = [...baseData, packageName, 'peer', dependency].join('/');\n    } else if (type === 'dev-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.concat([packageName, 'dev']);\n      if (dependencyScope) {\n        baseData.push(dependencyScope);\n      }\n      baseData.push(dependency);\n      url = baseData.join('/');\n    } else if (packageName && dependency) {\n      baseData.concat([packageName, dependency]);\n      url = baseData.join('/');\n    }\n\n    return url;\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface SizeProps extends BaseProps {\n  format?: 'min' | 'minzip';\n  packageName?: string;\n  scope?: string;\n  version?: string;\n}\n\n/**\n * Npm Size\n * \n * `/bundlephobia/:format/:packageName`\n * npm bundle size:  npm bundle size badge \n * \n * `/bundlephobia/:format/:scope/:packageName`\n * npm bundle size (scoped): npm bundle size (scoped) badge  \n * \n * `/bundlephobia/:format/:packageName/:version`\n * npm bundle size (version):  npm bundle size (version) badge \n * \n * `/bundlephobia/:format/:scope/:packageName/:version`\n * npm bundle size (scoped version): npm bundle size (scoped version) badge  \n * \n */\nexport default class Size extends Base<SizeProps> {\n  constructor(props: SizeProps) {\n    super(props, { format: 'min' }, { platform: 'npm' });\n  };\n  getUrl = () => {\n    const { base, type, platform, format, packageName, scope, version } = this.state;\n    if (platform !== 'npm') return '';\n\n    const baseData = [base, 'bundlephobia'];\n    let url = '';\n\n    if (packageName && format) {\n      url = [...baseData, format, packageName].join('/');\n    }\n    if (packageName && format && scope) {\n      url = [...baseData, format, scope, packageName].join('/');\n    }\n    if (packageName && format && scope && version) {\n      url = [...baseData, format, scope, packageName, version].join('/');\n    }\n    if (packageName && format && version) {\n      url = [...baseData, format, packageName, version].join('/');\n    }\n\n    return url;\n  }\n}","import React from 'react';\nimport Container from '../common/Container';\nimport Version from './Version';\nimport Size from './Size';\n\nexport default class Npm extends Container {\n  static Version = Version;\n  static Size = Size;\n}","import Npm from './Npm';\n\nexport default Npm;","import React from 'react';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Github, Coverage, Npm } from '../';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <GitHubCorners href=\"https://github.com/uiwjs/react-shields\" />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-list\">\n          <div className=\"title\">Github Social</div>\n          <Github.Social user=\"jaywcjlove\" repo=\"uiw\" href=\"https://github.com/jaywcjlove\" />\n          <Github user=\"jaywcjlove\" repo=\"awesome-mac\">\n            <Github.Social type=\"forks\" />\n            <Github.Social type=\"stars\" />\n            <Github.Social type=\"watchers\" />\n            <Github.Social type=\"followers\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Npm Version</div>\n          <Npm.Version scope=\"@uiw\" packageName=\"react-shields\" />\n          <Npm>\n            <Npm.Version scope=\"@uiw\" packageName=\"react-github-corners\" />\n            <Npm.Version packageName=\"hotkeys-js\" />\n            <Npm.Version packageName=\"kkt\" version=\"latest\" />\n            <Npm.Version packageName=\"tsbb\" />\n            <Npm.Version scope=\"@uiw\" type=\"peer-dependency\" dependency=\"react\"  packageName=\"react-github-corners\" />\n          </Npm>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Npm Size</div>\n          <Npm.Size scope=\"@uiw\" packageName=\"react-shields\" />\n          <Npm>\n            <Npm.Size format=\"minzip\" scope=\"@uiw\" packageName=\"react-github-corners\" />\n            <Npm.Size packageName=\"hotkeys-js\" />\n            <Npm.Size packageName=\"kkt\" version=\"5.0.0-alpha.12\" />\n          </Npm>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Issue</div>\n          <Github.Issues user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Issues href=\"https://github.com/uiwjs/react-shields\" type=\"issues\" />\n            <Github.Issues type=\"issues-raw\" />\n            <Github.Issues type=\"issues-closed\" />\n            <Github.Issues type=\"issues-closed-raw\" />\n            <Github.Issues type=\"issues-pr\" />\n            <Github.Issues type=\"issues-pr-raw\" />\n            <Github.Issues type=\"issues-pr-closed\" />\n            <Github.Issues type=\"issues-pr-closed-raw\" />\n            <Github.Issues type=\"issues\" label=\"bug\" />\n            <Github.Issues type=\"issues-raw\" label=\"bug\" />\n            <Github.Issues type=\"issues-pr\" label=\"bug\" />\n            <Github.Issues type=\"issues-pr-raw\" label=\"bug\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Downloads</div>\n          <Github.Downloads user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Downloads tag=\"v3.9.0\" total={false}/>\n            <Github.Downloads user=\"jaywcjlove\" repo=\"linux-command\" type=\"downloads-pre\" tag=\"v1.2.2\" path=\"linux-command.docset.zip\" />\n            <Github.Downloads tag=\"v3.9.0\"/>\n            <Github.Downloads tag=\"v3.9.0\"/>\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Activity</div>\n          <Github.Activity user=\"uiwjs\" repo=\"uiw\" type=\"commit-activity\" interval=\"y\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Activity type=\"last-commit\" />\n            <Github.Activity type=\"last-commit\" branch=\"gh-pages\" />\n            <Github.Activity type=\"release-date\" />\n            <Github.Activity type=\"release-date-pre\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Size</div>\n          <Github.Size user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Size />\n            <Github.Size type=\"repo-size\" />\n            <Github.Size type=\"size\" path=\"src/index.ts\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Version</div>\n          <Github.Version user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Version type=\"version-tag\" />\n            <Github.Version type=\"package-json\" />\n            <Github.Version type=\"package-json\" branch=\"dev\" />\n            <Github.Version user=\"jaywcjlove\" repo=\"wxmp\" type=\"manifest-json\" />\n            <Github.Version user=\"jaywcjlove\" repo=\"wxmp\" type=\"manifest-json\" branch=\"master\" />\n            <Github.Version user=\"x-mod\" repo=\"routine\" type=\"go-mod\" />\n            <Github.Version user=\"x-mod\" repo=\"routine\" type=\"go-mod\" branch=\"master\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github License</div>\n          <Github.License user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.License />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Analysis</div>\n          <Github.Analysis user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Analysis type=\"languages-top\" />\n            <Github.Analysis type=\"search\" query=\"github\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Coverages</div>\n          <Coverage.Coverages user=\"jaywcjlove\" repo=\"hotkeys\" />\n          <Coverage user=\"jaywcjlove\" repo=\"hotkeys\">\n            <Coverage.Coverages type=\"github\"  />\n            <Coverage.Coverages type=\"github\" />\n          </Coverage>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Codacy Coverages</div>\n          <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" />\n          <Coverage user=\"jaywcjlove\" repo=\"hotkeys\">\n            <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" branch=\"master\" />\n            <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" />\n          </Coverage>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}