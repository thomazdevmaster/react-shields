{"version":3,"sources":["logo.svg","../../../src/common/Container.tsx","../../../src/common/Base.tsx","../../../src/github/Issues.tsx","../../../src/github/Size.tsx","../../../src/github/Downloads.tsx","../../../src/github/Activity.tsx","../../../src/github/Version.tsx","../../../src/github/License.tsx","../../../src/github/Analysis.tsx","../../../src/github/Social.tsx","../../../src/github/Github.tsx","../../../src/github/index.tsx","../../../src/coverages/Coverages.tsx","../../../src/coverages/Codacy.tsx","../../../src/coverages/Coverage.tsx","../../../src/coverages/index.tsx","../../../src/npm/Version.tsx","../../../src/npm/Size.tsx","../../../src/npm/Npm.tsx","../../../src/npm/index.tsx","App.tsx","index.tsx"],"names":["render","this","props","child","React","constructor","Object","href","src","getUrl","Base","defaultProps","platform","base","type","test","label","user","repo","join","property","path","total","baseData","branch","version","interval","variant","typePath","query","Github","Issues","Size","Activity","Downloads","Version","License","Analysis","Social","projectId","Coverage","Coverages","Codacy","registryUri","url","packageName","format","Npm","App","className","logo","alt","scope","dependency","tag","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a368a75a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.105c84b7.svg\";","import React, { Component, ReactElement } from 'react';\nimport { BaseProps } from '../common/Base';\n\nexport interface ContainerProps extends BaseProps {}\n\nexport default class Container extends Component<ContainerProps> {\n  render() {\n    return (\n      <>\n        {React.Children.toArray(this.props.children).map((child: React.ReactNode) => {\n          if (!React.isValidElement(child)) return;\n          return React.cloneElement(child as ReactElement, { ...this.props, ...(child as React.ReactElement).props });\n        })}\n      </>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport interface BaseProps {\n  platform?: 'github' | 'coveralls' | 'npm';\n  type?: string;\n  user?: string;\n  repo?: string;\n  base?: string;\n  href?: HTMLAnchorElement['href'];\n}\n\nexport interface BaseState extends BaseProps {}\n\nexport default class Base<T> extends Component<BaseProps & T, BaseState & T> {\n  static defaultProps: BaseProps = {\n    platform: 'github',\n    base: 'https://img.shields.io',\n  }\n  constructor(props: BaseProps & T, defaultState: BaseProps & T, forceState?: BaseProps & T) {\n    super(props);\n    this.state = Object.assign({}, { ...defaultState,  ...props }, forceState);\n  }\n  getUrl = () => '';\n  render() {\n    const { href } = this.state;\n    if (href) {\n      return <a href={href}> <img src={this.getUrl()} /> </a>;\n    }\n    return <img src={this.getUrl()} />;\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface IssueProps extends BaseProps {\n  /**\n   * Github Issue\n   * \n   * `/github/:issueKind/detail/:property/:user/:repo/:number`  \n   * GitHub issue/pull request detail: GitHub issue/pull request detail badge  \n   * \n   * `/github/issues/:user/:repo`  \n   * GitHub issues:  GitHub issues badge \n   * \n   * `/github/issues-raw/:user/:repo`  \n   * GitHub issues:  GitHub issues badge \n   * \n   * `/github/issues/:user/:repo/:label`  \n   * GitHub issues by-label: GitHub issues by-label badge  \n   * \n   * `/github/issues-raw/:user/:repo/:label`  \n   * GitHub issues by-label: GitHub issues by-label badge  \n   * \n   * `/github/issues-closed/:user/:repo`  \n   * GitHub closed issues: GitHub closed issues badge  \n   * \n   * `/github/issues-closed-raw/:user/:repo`  \n   * GitHub closed issues: GitHub closed issues badge  \n   * \n   * `/github/issues-pr/:user/:repo`  \n   * GitHub pull requests: GitHub pull requests badge  \n   * \n   * `/github/issues-pr-raw/:user/:repo`  \n   * GitHub pull requests: GitHub pull requests badge  \n   * \n   * `/github/issues-pr-closed/:user/:repo`  \n   * GitHub closed pull requests:  GitHub closed pull requests badge \n   * \n   * `/github/issues-pr-closed-raw/:user/:repo`  \n   * GitHub closed pull requests:  GitHub closed pull requests badge \n   * \n   * `/github/issues-pr/:user/:repo/:label`  \n   * GitHub pull requests by-label:  GitHub pull requests by-label badge \n   * \n   * `/github/issues-pr-raw/:user/:repo/:label`  \n   * GitHub pull requests by-label:  GitHub pull requests by-label badge \n   * \n   * `/github/labels/:user/:repo/:name`  \n   * GitHub labels:  GitHub labels badge \n   */\n  type?: 'issueKind' | 'issues' | 'issues-raw' | 'issues-closed'\n    | 'issues-closed-raw' | 'issues-pr' | 'issues-pr-raw' \n    | 'issues-pr-closed' | 'issues-pr-closed-raw'\n    | 'languages';\n  /**\n   * /github/:issueKind/detail/:property/:user/:repo/:number\n   */\n  property?: string;\n  /**\n   * /github/:issueKind/detail/:property/:user/:repo/:number\n   */\n  number?: string;\n  label?: string;\n}\n\nexport default class Issue extends Base<IssueProps> {\n  constructor(props: IssueProps) {\n    super(props, { platform: 'github', type: 'issues' });\n  };\n  getUrl = () => {\n    const { type, platform, property, user, repo, label, base } = this.state;\n    if (platform !== 'github') return '';\n    if (type === 'issues' || /^issues\\-(raw|closed|closed\\-raw|pr|pr\\-raw|pr\\-closed|pr\\-closed\\-raw)/.test(type!)) {\n      if(label && (type === 'issues' || /^issues\\-(raw|pr|pr\\-raw)/.test(type || ''))) {\n        return [base, platform, type, user, repo, label].join('/');\n      }\n      return [base, platform, type, user, repo].join('/');\n    }\n    if(type === 'issueKind') {\n      return [base, platform, type, 'detail', property, user, repo].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps } from '../common/Base';\n\nexport interface SizeProps extends BaseProps {\n  /**\n   * Github Size\n   * \n   * /github/languages/code-size/:user/:repo  \n   * /github/repo-size/:user/:repo  \n   * /github/size/:user/:repo/:path*  \n   */\n  type?: 'languages' | 'repo-size' | 'size';\n  /**\n   * GitHub file size in bytes\n   * build/phaser-craft.min.js\n   */\n  path?: string;\n}\n\nexport default class Size extends Base<SizeProps> {\n  constructor(props: SizeProps) {\n    super(props, { platform: 'github', type: 'languages' });\n  };\n\n  getUrl = () => {\n    const { type, platform, user, repo, base, path } = this.state;\n    if (platform !== 'github') return '';\n    /**\n     * /github/languages/code-size/:user/:repo\n     */\n    if (type === 'languages') {\n      return [base, platform, type, 'code-size', user, repo].join('/');\n    }\n    /**\n     * /github/repo-size/:user/:repo\n     */\n    if (type === 'repo-size') {\n      return [base, platform, type, user, repo].join('/');\n    }\n    /**\n     * /github/size/:user/:repo/:path*\n     */\n    if (type === 'size' && path) {\n      return [base, platform, type, user, repo, path].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface ActivityProps extends BaseProps {\n  /**\n   * Github Downloads\n   * \n   * `/github/downloads/:user/:repo/total`\n   * GitHub All Releases:  GitHub All Releases badge \n   * \n   * `/github/downloads/:user/:repo/:tag/total`\n   * GitHub Releases:  GitHub Releases badge \n   * \n   * `/github/downloads-pre/:user/:repo/:tag/total`\n   * GitHub Pre-Releases:  GitHub Pre-Releases badge \n   * \n   * `/github/downloads/:user/:repo/:tag/total`\n   * GitHub Releases (by Release): GitHub Releases (by Release) badge  \n   * \n   * `/github/downloads/:user/:repo/:tag/:path`\n   * GitHub Releases (by Asset): GitHub Releases (by Asset) badge  \n   * \n   * `/github/downloads-pre/:user/:repo/:tag/:path`\n   * GitHub Pre-Releases (by Asset): GitHub Pre-Releases (by Asset) badge  \n   */\n  type?: 'downloads' | 'downloads-pre';\n  tag?: string;\n  path?: string;\n  total?: boolean;\n}\n\nexport default class Activity extends Base<ActivityProps> {\n  constructor(props: ActivityProps) {\n    super(props, { platform: 'github', type: 'downloads', total: true });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base, tag, path, total } = this.state;\n    if (platform !== 'github' || !/^(downloads|downloads-pre)/.test(type || '')) return '';\n\n    const baseData = [base, platform, type, user, repo];\n\n    if (path && tag) {\n      return [...baseData, tag, path].join('/');\n    }\n    if ((total && tag) || (type === 'downloads-pre' && tag && total)) {\n      return [...baseData, tag, 'total'].join('/');\n    }\n    if (total) {\n      return [...baseData, 'total'].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface ActivityProps extends BaseProps {\n  /**\n   * `/github/commit-activity/:interval/:user/:repo`\n   * GitHub commit activity: GitHub commit activity badge  \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since tagged version:  GitHub commits since tagged version badge \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since tagged version (branch): GitHub commits since tagged version (branch) badge  \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since latest release:  GitHub commits since latest release badge \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since latest release (branch): GitHub commits since latest release (branch) badge  \n   * \n   * `/github/:variant/:user/:repo`\n   * GitHub contributors:  GitHub contributors badge \n   * \n   * `/github/last-commit/:user/:repo`\n   * GitHub last commit: GitHub last commit badge  \n   * \n   * `/github/last-commit/:user/:repo/:branch`\n   * GitHub last commit (branch):  GitHub last commit (branch) badge \n   * \n   * `/github/release-date/:user/:repo`\n   * GitHub Release Date:  GitHub Release Date badge \n   * \n   * `/github/release-date-pre/:user/:repo`\n   * GitHub (Pre-)Release Date:  GitHub (Pre-)Release Date badge \n   */\n  type?: 'commit-activity' | 'commits-since' | 'variant' | 'last-commit' | 'release-date' | 'release-date-pre';\n  variant?: string;\n  interval?: 'y' | 'm' | 'w';\n  version?: 'contributors' | 'contributors-anon';\n  branch?: string;\n}\n\nexport default class Activity extends Base<ActivityProps> {\n  constructor(props: ActivityProps) {\n    super(props, { platform: 'github', type: 'commits-since' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base, interval, variant, version, branch } = this.state;\n    if (platform !== 'github') return '';\n    if (type === 'commits-since' && version && branch) {\n      return [base, platform, type, user, repo, version, branch].join('/');\n    }\n    if (type === 'commit-activity' && interval) {\n      return [base, platform, type, interval, user, repo].join('/');\n    }\n    if (type === 'variant' && variant) {\n      return [base, platform, type, variant, user, repo].join('/');\n    }\n    if (type === 'last-commit') {\n      return branch ? [base, platform, type, user, repo, branch].join('/') : [base, platform, type, user, repo].join('/');\n    }\n    if (type && /^release\\-(date|date\\-pre)/.test(type)) {\n      return [base, platform, type, user, repo].join('/');\n    }\n    return '';\n  }\n}","import React from 'react';\nimport Base, { BaseProps } from '../common/Base';\n\nexport interface VersionProps extends BaseProps {\n  /**\n   * Github Version\n   * \n   * `/github/go-mod/go-version/:user/:repo`\n   * GitHub go.mod Go version: GitHub go.mod Go version badge  \n   * \n   * `/github/go-mod/go-version/:user/:repo/:branch`\n   * GitHub go.mod Go version (branch):  GitHub go.mod Go version (branch) badge \n   * \n   * `/github/go-mod/go-version/:user/:repo?filename=src%2Fgo.mod`\n   * GitHub go.mod Go version (subfolder of monorepo): GitHub go.mod Go version (subfolder of monorepo) badge  \n   * \n   * `/github/go-mod/go-version/:user/:repo/:branch?filename=src%2Fgo.mod`\n   * GitHub go.mod Go version (branch & subfolder of monorepo):  GitHub go.mod Go version (branch & subfolder of monorepo) badge \n   * \n   * `/github/manifest-json/v/:user/:repo`\n   * GitHub manifest version:  GitHub manifest version badge \n   * \n   * `/github/manifest-json/v/:user/:repo/:branch`\n   * GitHub manifest version:  GitHub manifest version badge \n   * \n   * `/github/package-json/v/:user/:repo`\n   * GitHub package.json version:  GitHub package.json version badge \n   * \n   * `/github/package-json/v/:user/:repo/:branch`\n   * GitHub package.json version (branch): GitHub package.json version (branch) badge  \n   * \n   * `/github/v/release/:user/:repo`\n   * GitHub release (latest by date):  GitHub release (latest by date) badge \n   * \n   * `/github/v/release/:user/:repo?include_prereleases`\n   * GitHub release (latest by date including pre-releases): GitHub release (latest by date including pre-releases) badge  \n   * \n   * `/github/v/release/:user/:repo?sort=semver`\n   * GitHub release (latest SemVer): GitHub release (latest SemVer) badge  \n   * \n   * `/github/v/release/:user/:repo?include_prereleases&sort=semver`\n   * GitHub release (latest SemVer including pre-releases):  GitHub release (latest SemVer including pre-releases) badge \n   * \n   * `/github/v/tag/:user/:repo`\n   * GitHub tag (latest by date):  GitHub tag (latest by date) badge \n   * \n   * `/github/v/tag/:user/:repo?sort=semver`\n   * GitHub tag (latest SemVer): GitHub tag (latest SemVer) badge  \n   * \n   * `/github/v/tag/:user/:repo?include_prereleases&sort=semver`\n   * GitHub tag (latest SemVer pre-release): GitHub tag (latest SemVer pre-release) badge  \n   */\n  type?: 'version-release' | 'version-tag' | 'package-json' | 'manifest-json' | 'go-mod';\n  branch?: string;\n}\n\nexport default class Version extends Base<VersionProps> {\n  constructor(props: VersionProps) {\n    super(props, { platform: 'github', type: 'version-release' });\n  };\n\n  getUrl = () => {\n    const { type, platform, user, repo, base, branch } = this.state;\n    let typePath = '';\n    switch (type) {\n      case 'version-release': typePath = 'v/release';break;\n      case 'version-tag': typePath = 'v/tag';break;\n      case 'package-json': typePath = 'package-json/v';break;\n      case 'manifest-json': typePath = 'manifest-json/v';break;\n      case 'go-mod': typePath = 'go-mod/go-version';break;\n      default:break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    const baseData = [base, platform, typePath, user, repo];\n    if (/(go\\-mod|manifest\\-json|package\\-json)/.test(type || '') && branch) {\n      return [...baseData, branch].join('/');\n    }\n    return baseData.join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface LicenseProps extends BaseProps {\n  /**\n   * Github License\n   * \n   * `/github/license/:user/:repo`  \n   * GitHub: GitHub badge  \n   */\n  type?: 'license';\n}\n\nexport default class License extends Base<LicenseProps> {\n  constructor(props: LicenseProps) {\n    super(props, { platform: 'github', type: 'license' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'github') return '';\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface AnalysisProps extends BaseProps {\n  /**\n   * Github Analysis\n   * \n   * `/github/languages/count/:user/:repo`  \n   * GitHub language count:  GitHub language count badge \n   * \n   * `/github/search/:user/:repo/:query`  \n   * GitHub search hit counter:  GitHub search hit counter badge \n   * \n   * `/github/languages/top/:user/:repo`  \n   * GitHub top language:  GitHub top language badge \n   */\n  type?: 'languages-count' | 'languages-top' | 'search';\n  query?: string;\n}\n\nexport default class Analysis extends Base<AnalysisProps> {\n  constructor(props: AnalysisProps) {\n    super(props, { platform: 'github', type: 'languages-count' });\n  };\n  getUrl = () => {\n    const {  base, platform, type, user, repo, query } = this.state;\n    let typePath = '';\n    switch (type) {\n      case 'languages-count': typePath = 'languages/count';break;\n      case 'languages-top': typePath = 'languages/top';break;\n      case 'search': typePath = 'search';break;\n      default:break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    const baseData = [base, platform, typePath, user, repo];\n    if (query) {\n      return [...baseData, query].join('/');\n    }\n    return baseData.join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface SocialProps extends BaseProps {\n  /**\n   * Github License\n   * \n   * `/github/followers/:user?label=Follow`\n   * GitHub followers: GitHub followers badge  \n   * \n   * `/github/forks/:user/:repo?label=Fork`\n   * GitHub forks: GitHub forks badge  \n   * \n   * `/github/stars/:user/:repo?style=social`\n   * GitHub stars: GitHub stars badge  \n   * \n   * `/github/watchers/:user/:repo?label=Watch`\n   * GitHub watchers:  GitHub watchers badge \n   */\n  type?: 'followers' | 'forks' | 'stars' | 'watchers';\n}\n\nexport default class Social extends Base<SocialProps> {\n  constructor(props: SocialProps) {\n    super(props, { platform: 'github', type: 'followers' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'github') return '';\n    if(type === 'followers') return [base, platform, type, user].join('/');\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import React from 'react';\nimport Container from '../common/Container';\nimport Issues from './Issues';\nimport Size from './Size';\nimport Downloads from './Downloads';\nimport Activity from './Activity';\nimport Version from './Version';\nimport License from './License';\nimport Analysis from './Analysis';\nimport Social from './Social';\n\nexport default class Github extends Container {\n  static Issues = Issues;\n  static Size = Size;\n  static Activity = Activity;\n  static Downloads = Downloads;\n  static Version = Version;\n  static License = License;\n  static Analysis = Analysis;\n  static Social = Social;\n}","import Github from './Github';\n\nexport default Github;","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface CoveragesProps extends BaseProps {\n  /**\n   * Code Coverage\n   * \n   * `/coveralls/:vcsType/:user/:repo`\n   * Coveralls github: Coveralls github badge  \n   * \n   * `/coveralls/:vcsType/:user/:repo/:branch`\n   * Coveralls github branch:  Coveralls github branch badge \n   * \n   * `/coveralls/:vcsType/:user/:repo`\n   * Coveralls bitbucket:  Coveralls bitbucket badge \n   * \n   * `/coveralls/:vcsType/:user/:repo/:branch`\n   * Coveralls bitbucket branch: Coveralls bitbucket branch badge  \n   */\n  type?: string;\n  branch?: string;\n}\n\nexport default class Coverages extends Base<CoveragesProps> {\n  constructor(props: CoveragesProps) {\n    super(props, { type: 'github' }, { platform: 'coveralls' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'coveralls') return '';\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface CodacyProps extends BaseProps {\n  /**\n   * Codacy Coverage\n   * \n   * `/codacy/coverage/:projectId`\n   * Codacy coverage:  Codacy coverage badge \n   * \n   * `/codacy/coverage/:projectId/:branch`\n   * Codacy branch coverage: Codacy branch coverage badge  \n   */\n  projectId?: string;\n  branch?: string;\n}\n\nexport default class Codacy extends Base<CodacyProps> {\n  constructor(props: CodacyProps) {\n    super(props, { }, { platform: 'coveralls' });\n  };\n  getUrl = () => {\n    const { base, platform, projectId, branch } = this.state;\n    if (platform !== 'coveralls') return '';\n    if (branch) return [base, platform, projectId, branch].join('/');\n    return [base, 'codacy/coverage', projectId].join('/');\n  }\n}","import React  from 'react';\nimport Container from '../common/Container';\nimport Coverages from './Coverages';\nimport Codacy from './Codacy';\n\n\nexport default class Coverage extends Container {\n  static Coverages = Coverages;\n  static Codacy = Codacy;\n}","import Coverage from './Coverage';\n\nexport default Coverage;","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\n/**\n * NPM Version\n * \n * `/npm/v/:packageName`  \n * npm:  npm badge \n * \n * `/npm/v/:scope/:packageName`  \n * npm (scoped): npm (scoped) badge  \n * \n * `/npm/v/:packageName/:tag`  \n * npm (tag):  npm (tag) badge \n * \n * `/npm/v/:packageName/:tag?registry_uri=https%3A%2F%2Fregistry.npmjs.com`  \n * npm (custom registry):  npm (custom registry) badge \n * \n * `/npm/v/:scope/:packageName/:tag`  \n * npm (scoped with tag):  npm (scoped with tag) badge \n * \n * `/npm/dependency-version/:packageName/peer/:dependency`\n * npm peer dependency version:  npm peer dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm peer dependency version (scoped): npm peer dependency version (scoped) badge  \n * \n * `/npm/dependency-version/:packageName/dev/:dependency`\n * npm dev dependency version: npm dev dependency version badge  \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm dev dependency version (scoped):  npm dev dependency version (scoped) badge \n * \n * `/npm/dependency-version/:packageName/:dependency`\n * npm (prod) dependency version:  npm (prod) dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/:dependencyScope?/:dependency`\n * npm (prod) dependency version (scoped): npm (prod) dependency version (scoped) badge  \n * \n * `/npm/types/:packageName`\n * npm type definitions: npm type definitions badge  \n */\nexport interface VersionProps extends BaseProps {\n  type?: 'version' | 'peer-dependency' | 'dev-dependency';\n  registryUri?: string;\n  packageName?: string;\n  dependency?: string;\n  scope?: string;\n  dependencyScope?: string;\n  version?: string;\n}\n\nexport default class Version extends Base<VersionProps> {\n  constructor(props: VersionProps) {\n    super(props, { type: 'version' }, { platform: 'npm' });\n  };\n  getUrl = () => {\n    const { base, platform, type, scope, packageName, dependency, dependencyScope, version, registryUri  } = this.state;\n    if (platform !== 'npm' || !packageName) return '';\n\n    let url = '';\n    const baseData = [base, platform];\n\n    if (type === 'version' && packageName) {\n      baseData.push('v');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.push(packageName);\n      if (version) {\n        baseData.push(version);\n      }\n      url = baseData.join('/');\n      if (registryUri) {\n        url = `${url}?registry_uri=${registryUri}`;\n      }\n    } else if (type === 'peer-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      url = [...baseData, packageName, 'peer', dependency].join('/');\n    } else if (type === 'dev-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.concat([packageName, 'dev']);\n      if (dependencyScope) {\n        baseData.push(dependencyScope);\n      }\n      baseData.push(dependency);\n      url = baseData.join('/');\n    } else if (packageName && dependency) {\n      baseData.concat([packageName, dependency]);\n      url = baseData.join('/');\n    }\n\n    return url;\n  }\n}","import React from 'react';\nimport Base, { BaseProps} from '../common/Base';\n\nexport interface SizeProps extends BaseProps {\n  format?: 'min' | 'minzip';\n  packageName?: string;\n  scope?: string;\n  version?: string;\n}\n\n/**\n * Npm Size\n * \n * `/bundlephobia/:format/:packageName`\n * npm bundle size:  npm bundle size badge \n * \n * `/bundlephobia/:format/:scope/:packageName`\n * npm bundle size (scoped): npm bundle size (scoped) badge  \n * \n * `/bundlephobia/:format/:packageName/:version`\n * npm bundle size (version):  npm bundle size (version) badge \n * \n * `/bundlephobia/:format/:scope/:packageName/:version`\n * npm bundle size (scoped version): npm bundle size (scoped version) badge  \n * \n */\nexport default class Size extends Base<SizeProps> {\n  constructor(props: SizeProps) {\n    super(props, { format: 'min' }, { platform: 'npm' });\n  };\n  getUrl = () => {\n    const { base, type, platform, format, packageName, scope, version } = this.state;\n    if (platform !== 'npm') return '';\n\n    const baseData = [base, 'bundlephobia'];\n    let url = '';\n\n    if (packageName && format) {\n      url = [...baseData, format, packageName].join('/');\n    }\n    if (packageName && format && scope) {\n      url = [...baseData, format, scope, packageName].join('/');\n    }\n    if (packageName && format && scope && version) {\n      url = [...baseData, format, scope, packageName, version].join('/');\n    }\n    if (packageName && format && version) {\n      url = [...baseData, format, packageName, version].join('/');\n    }\n\n    return url;\n  }\n}","import React from 'react';\nimport Container from '../common/Container';\nimport Version from './Version';\nimport Size from './Size';\n\nexport default class Npm extends Container {\n  static Version = Version;\n  static Size = Size;\n}","import Npm from './Npm';\n\nexport default Npm;","import React from 'react';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Github, Coverage, Npm } from '../';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <GitHubCorners href=\"https://github.com/uiwjs/react-shields\" />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-list\">\n          <div className=\"title\">Github Social</div>\n          <Github.Social user=\"jaywcjlove\" repo=\"uiw\" href=\"https://github.com/jaywcjlove\" />\n          <Github user=\"jaywcjlove\" repo=\"awesome-mac\">\n            <Github.Social type=\"forks\" />\n            <Github.Social type=\"stars\" />\n            <Github.Social type=\"watchers\" />\n            <Github.Social type=\"followers\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Npm Version</div>\n          <Npm.Version scope=\"@uiw\" packageName=\"react-shields\" />\n          <Npm>\n            <Npm.Version scope=\"@uiw\" packageName=\"react-github-corners\" />\n            <Npm.Version packageName=\"hotkeys-js\" />\n            <Npm.Version packageName=\"kkt\" version=\"latest\" />\n            <Npm.Version packageName=\"tsbb\" />\n            <Npm.Version scope=\"@uiw\" type=\"peer-dependency\" dependency=\"react\"  packageName=\"react-github-corners\" />\n          </Npm>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Npm Size</div>\n          <Npm.Size scope=\"@uiw\" packageName=\"react-shields\" />\n          <Npm>\n            <Npm.Size format=\"minzip\" scope=\"@uiw\" packageName=\"react-github-corners\" />\n            <Npm.Size packageName=\"hotkeys-js\" />\n            <Npm.Size packageName=\"kkt\" version=\"5.0.0-alpha.12\" />\n          </Npm>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Issue</div>\n          <Github.Issues user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Issues href=\"https://github.com/uiwjs/react-shields\" type=\"issues\" />\n            <Github.Issues type=\"issues-raw\" />\n            <Github.Issues type=\"issues-closed\" />\n            <Github.Issues type=\"issues-closed-raw\" />\n            <Github.Issues type=\"issues-pr\" />\n            <Github.Issues type=\"issues-pr-raw\" />\n            <Github.Issues type=\"issues-pr-closed\" />\n            <Github.Issues type=\"issues-pr-closed-raw\" />\n            <Github.Issues type=\"issues\" label=\"bug\" />\n            <Github.Issues type=\"issues-raw\" label=\"bug\" />\n            <Github.Issues type=\"issues-pr\" label=\"bug\" />\n            <Github.Issues type=\"issues-pr-raw\" label=\"bug\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Downloads</div>\n          <Github.Downloads user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Downloads tag=\"v3.9.0\" total={false}/>\n            <Github.Downloads user=\"jaywcjlove\" repo=\"linux-command\" type=\"downloads-pre\" tag=\"v1.2.2\" path=\"linux-command.docset.zip\" />\n            <Github.Downloads tag=\"v3.9.0\"/>\n            <Github.Downloads tag=\"v3.9.0\"/>\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Activity</div>\n          <Github.Activity user=\"uiwjs\" repo=\"uiw\" type=\"commit-activity\" interval=\"y\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Activity type=\"last-commit\" />\n            <Github.Activity type=\"last-commit\" branch=\"gh-pages\" />\n            <Github.Activity type=\"release-date\" />\n            <Github.Activity type=\"release-date-pre\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Size</div>\n          <Github.Size user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Size />\n            <Github.Size type=\"repo-size\" />\n            <Github.Size type=\"size\" path=\"src/index.ts\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Version</div>\n          <Github.Version user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Version type=\"version-tag\" />\n            <Github.Version type=\"package-json\" />\n            <Github.Version type=\"package-json\" branch=\"dev\" />\n            <Github.Version user=\"jaywcjlove\" repo=\"wxmp\" type=\"manifest-json\" />\n            <Github.Version user=\"jaywcjlove\" repo=\"wxmp\" type=\"manifest-json\" branch=\"master\" />\n            <Github.Version user=\"x-mod\" repo=\"routine\" type=\"go-mod\" />\n            <Github.Version user=\"x-mod\" repo=\"routine\" type=\"go-mod\" branch=\"master\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github License</div>\n          <Github.License user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.License />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Analysis</div>\n          <Github.Analysis user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Analysis type=\"languages-top\" />\n            <Github.Analysis type=\"search\" query=\"github\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Coverages</div>\n          <Coverage.Coverages user=\"jaywcjlove\" repo=\"hotkeys\" />\n          <Coverage user=\"jaywcjlove\" repo=\"hotkeys\">\n            <Coverage.Coverages type=\"github\"  />\n            <Coverage.Coverages type=\"github\" />\n          </Coverage>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Codacy Coverages</div>\n          <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" />\n          <Coverage user=\"jaywcjlove\" repo=\"hotkeys\">\n            <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" branch=\"master\" />\n            <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" />\n          </Coverage>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}